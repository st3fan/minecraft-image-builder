name: Build and Push Minecraft Spigot Docker Image

on:
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Java 21
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '21'

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y git wget

    - name: Find latest Minecraft 1.21.x version
      id: minecraft_version
      run: |
        echo "Fetching Spigot versions directory..."
        VERSIONS_HTML=$(wget -qO- https://hub.spigotmc.org/versions/)
        
        echo "Looking for latest 1.21.x version..."
        LATEST_VERSION=$(echo "$VERSIONS_HTML" | grep -oE '1\.21\.[0-9]+\.json' | \
          sed 's/\.json$//' | \
          sort -V | \
          tail -1)
        
        if [ -z "$LATEST_VERSION" ]; then
          echo "No 1.21.x version found, falling back to latest"
          LATEST_VERSION="latest"
        else
          echo "Found latest 1.21.x version: $LATEST_VERSION"
        fi
        
        echo "version=$LATEST_VERSION" >> $GITHUB_OUTPUT

    - name: Download and run BuildTools
      run: |
        mkdir -p build
        cd build
        wget -O BuildTools.jar https://hub.spigotmc.org/jenkins/job/BuildTools/lastSuccessfulBuild/artifact/target/BuildTools.jar
        java -jar BuildTools.jar --rev ${{ steps.minecraft_version.outputs.version }}
        ls -la spigot-*.jar
        cp spigot-*.jar ../spigot.jar

    - name: Extract Spigot version
      id: version
      run: |
        SPIGOT_FILE=$(ls build/spigot-*.jar)
        VERSION=$(basename "$SPIGOT_FILE" .jar | sed 's/spigot-//')
        echo "version=$VERSION" >> $GITHUB_OUTPUT
        echo "Detected Spigot version: $VERSION"

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=raw,value=latest
          type=raw,value=${{ steps.minecraft_version.outputs.version }}
          type=raw,value={{date 'YYYYMMDD-HHmmss'}}

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max